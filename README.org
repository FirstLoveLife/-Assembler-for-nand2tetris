This is a tiny assembler writen in sml and compile in smlnj, which convert assembler language to machine language.
It is also [[https://www.nand2tetris.org/][nand2tetris]]'s 6st project.

*** Use

#+BEGIN_SRC sml
$ smlnj
- use "assembler.sml";
- init "filepath";
$ diff yourhackfile test/hackfile
#+END_SRC
*** outline
#+BEGIN_SRC
allDigits
    allInRange
    checkDigit
readLines
    removeCarriageReturn
    removeHeadSpaces
    removeTailSpaces
    removeComment
    readFile
replaceDigestLabelsAndVariables
    replaceDigestLabels
        replaceDigestLabelsHelper
    getLabelPairsVariables
        replaceVariablesHelper
process
    getBinary
        getBinaryHelper
    appendZero
    getBinaryInstruction
    parseInstruction
init
          write

#+END_SRC

*** todo

- Exception and space handle
- Implement hashtable to store symbols.
- Too many nested functions, I should reformated them

*** Thanks
This project is inspired by CestDiego's [[https://github.com/CestDiego/nand2tetris.el][nand2tetris.el]] a lot. I also learn some elisp skills from his project
